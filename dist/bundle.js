/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ecoMap/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ecoMap/js/main.js":
/*!*******************************!*\
  !*** ./src/ecoMap/js/main.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _data = __webpack_require__(/*! ../jsonDATA/data.json */ \"./src/ecoMap/jsonDATA/data.json\");\n\nvar _data2 = _interopRequireDefault(_data);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibW9za2tpciIsImEiOiJjazNoZTAwcTgwYXJiM2JxdDJra2R3NXViIn0.d4xMxIrtPiJpOMbMW3XXLw';\n// pk.eyJ1IjoibW9za2tpciIsImEiOiJjazNoZTAwcTgwYXJiM2JxdDJra2R3NXViIn0.d4xMxIrtPiJpOMbMW3XXLw\n// token for URL with GITHUB pk.eyJ1IjoibW9za2tpciIsImEiOiJjazdwenAycDgwMDJrM2duMXlxY2wyb212In0.1A3TicZXFlulWa55US7ONQ\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/dark-v10',\n    center: [27.56667, 53.9000],\n    zoom: 10\n});\n\n// Create a popup, but don't add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\nconsole.log(popup);\n\nvar overlay = document.getElementById('map-overlay');\n\nfetch(_data2.default).then(function (data) {\n    return data.json();\n}).then(function (data) {\n    // console.log(data)\n    var arrFeatures = data.features;\n    addPopupLogic(arrFeatures);\n});\n\nfunction addPopupLogic(arrFeatures) {\n    console.log(arrFeatures);\n    var arrCoordinats = [];\n    arrFeatures.forEach(function (element) {\n        var result = [];\n        result.push(element.geometry.coordinates);\n        result.push(element.properties.id);\n        arrCoordinats.push(result.flat());\n    });\n\n    console.log('Массив координат ', arrCoordinats);\n\n    var title = document.createElement('strong');\n    title.innerHTML = '';\n\n    // roperties\": {\n    //     \"id\": \"ak16994523\",\n    //     \"mag\": 2.3,\n    //     \"benzol\": 0.01,\n    //     \"ksilol\": 0.04,\n    //     \"nitrogendioxideconcent\": 0,\n    //     \"so2\": 0.05,\n    //     \"toluol\": 0,\n    //     \"time\": 1507425650893,\n    //     \"felt\": null,\n    //     \"tsunami\": 0\n    var benzolContainer = document.createElement('div');\n    benzolContainer.innerHTML = 'Бензол';\n    var ksilolContainer = document.createElement('div');\n    ksilolContainer.innerHTML = 'Ксилол';\n\n    var population = document.createElement('div');\n    population.innerHTML = '';\n\n    console.log(arrFeatures);\n    map.on('mousemove', function (e) {\n        // console.log(e)\n        title.textContent = '';\n        benzolContainer.textContent = '\\u0411\\u0435\\u043D\\u0437\\u043E\\u043B: ';\n        ksilolContainer.textContent = '\\u041A\\u0441\\u0438\\u043B\\u043E\\u043B: ';\n        population.textContent = '';\n\n        document.getElementById('info').innerHTML = JSON.stringify(e.point) + '<br />' + JSON.stringify(e.lngLat.wrap());\n\n        // console.log(e.lngLat.lng)\n        // console.log(e.lngLat.lat)\n\n        var lngFromJSON = e.lngLat.lng.toFixed(2);\n        var latFromJSON = e.lngLat.lat.toFixed(2);\n\n        arrFeatures.forEach(function (val, index) {\n            // console.log('val ',val)\n            if (val.geometry.coordinates[0].toFixed(2) === lngFromJSON && val.geometry.coordinates[1].toFixed(2) === latFromJSON) {\n\n                // console.log(arrCoordinats[index][2])\n                console.log(val.properties);\n\n                title.textContent = '' + val.properties.id;\n                benzolContainer.textContent = '\\u0411\\u0435\\u043D\\u0437\\u043E\\u043B: ' + (val.properties.benzol || 'Нет данных');\n                ksilolContainer.textContent = '\\u041A\\u0441\\u0438\\u043B\\u043E\\u043B: ' + (val.properties.ksilol || 'Нет данных');\n                population.textContent = 'Total population: ';\n\n                overlay.appendChild(title);\n                overlay.appendChild(benzolContainer);\n                overlay.appendChild(ksilolContainer);\n\n                overlay.appendChild(population);\n                overlay.style.display = 'block';\n\n                popup.setLngLat(e.lngLat).setText(arrCoordinats[index][2]).addTo(map);\n            } else {\n                popup.remove();\n            }\n        });\n    });\n}\n\nmap.on('load', function () {\n    map.setLayoutProperty('country-label', 'text-field', ['get', 'name_ru']);\n\n    // Add a geojson point source.\n    // Heatmap layers also work with a vector tile source.\n    map.addSource('earthquakes', {\n        'type': 'geojson',\n        'data': _data2.default\n    });\n\n    map.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'earthquakes',\n        'maxzoom': 9,\n        'paint': {\n            // Increase the heatmap weight based on frequency and property magnitude\n            'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 5, 1],\n            // Increase the heatmap color weight weight by zoom level\n            // heatmap-intensity is a multiplier on top of heatmap-weight\n            'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n            // Begin color ramp at 0-stop with a 0-transparancy color\n            // to create a blur-like effect.\n            'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n            // Adjust the heatmap radius by zoom level\n            'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n            // Transition from heatmap to circle layer by zoom level\n            'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n    }, 'waterway-label');\n\n    map.addLayer({\n        'id': 'earthquakes-point',\n        'type': 'circle',\n        'source': 'earthquakes',\n        'minzoom': 7,\n        'paint': {\n            // Size circle radius by earthquake magnitude and zoom level\n            'circle-radius': ['interpolate', ['linear'], ['zoom'], 7, ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4], 16, ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]],\n            // Color circle by earthquake magnitude\n            'circle-color': ['interpolate', ['linear'], ['get', 'mag'], 1, 'rgba(33,102,172,0)', 2, 'rgb(103,169,207)', 3, 'rgb(209,229,240)', 4, 'rgb(253,219,199)', 5, 'rgb(239,138,98)', 6, 'rgb(178,24,43)'],\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 1,\n            // Transition from heatmap to circle layer by zoom level\n            'circle-opacity': ['interpolate', ['linear'], ['zoom'], 7, 0, 8, 1]\n        }\n    }, 'waterway-label');\n});\n\n// map.on('load', function () {\n//     map.addSource('airports', {\n//         'type': 'vector',\n//         'url': 'mapbox://mapbox.04w69w5j'\n//     });\n//     map.addLayer({\n//         'id': 'airport',\n//         'source': 'airports',\n//         'source-layer': 'ne_10m_airports',\n//         'type': 'symbol',\n//         'layout': {\n//             'icon-image': 'airport-15',\n//             'icon-padding': 0,\n//             'icon-allow-overlap': true\n//         }\n//     });\n\n//     map.on('moveend', function () {\n//         var features = map.queryRenderedFeatures({ layers: ['airport'] });\n\n//         if (features) {\n//             var uniqueFeatures = getUniqueFeatures(features, 'iata_code');\n//             // Populate features for the listing overlay.\n//             renderListings(uniqueFeatures);\n\n//             // Clear the input container\n//             filterEl.value = '';\n\n//             // Store the current features in sn `airports` variable to\n//             // later use for filtering on `keyup`.\n//             airports = uniqueFeatures;\n//         }\n//     });\n\n//     map.on('mousemove', 'airport', function (e) {\n//         // Change the cursor style as a UI indicator.\n//         map.getCanvas().style.cursor = 'pointer';\n\n//         // Populate the popup and set its coordinates based on the feature.\n//         var feature = e.features[0];\n//         popup\n//             .setLngLat(feature.geometry.coordinates)\n//             .setText(\n//                 feature.properties.name +\n//                 ' (' +\n//                 feature.properties.abbrev +\n//                 ')'\n//             )\n//             .addTo(map);\n//     });\n\n//     map.on('mouseleave', 'airport', function () {\n//         map.getCanvas().style.cursor = '';\n//         popup.remove();\n//     });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZWNvTWFwL2pzL21haW4uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Vjb01hcC9qcy9tYWluLmpzPzUxMjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpzb25EYXRhIGZyb20gJy4uL2pzb25EQVRBL2RhdGEuanNvbic7XHJcblxyXG5tYXBib3hnbC5hY2Nlc3NUb2tlbiA9ICdway5leUoxSWpvaWJXOXphMnRwY2lJc0ltRWlPaUpqYXpOb1pUQXdjVGd3WVhKaU0ySnhkREpyYTJSM05YVmlJbjAuZDR4TXhJcnRQaUpwT01iTVczWFhMdyc7XHJcbi8vIHBrLmV5SjFJam9pYlc5emEydHBjaUlzSW1FaU9pSmphek5vWlRBd2NUZ3dZWEppTTJKeGRESnJhMlIzTlhWaUluMC5kNHhNeElydFBpSnBPTWJNVzNYWEx3XHJcbi8vIHRva2VuIGZvciBVUkwgd2l0aCBHSVRIVUIgcGsuZXlKMUlqb2liVzl6YTJ0cGNpSXNJbUVpT2lKamF6ZHdlbkF5Y0Rnd01ESnJNMmR1TVhseFkyd3liMjEySW4wLjFBM1RpY1pYRmx1bFdhNTVVUzdPTlFcclxudmFyIG1hcCA9IG5ldyBtYXBib3hnbC5NYXAoe1xyXG4gICAgY29udGFpbmVyOiAnbWFwJyxcclxuICAgIHN0eWxlOiAnbWFwYm94Oi8vc3R5bGVzL21hcGJveC9kYXJrLXYxMCcsXHJcbiAgICBjZW50ZXI6IFsyNy41NjY2NywgNTMuOTAwMF0sXHJcbiAgICB6b29tOiAxMFxyXG59KTtcclxuXHJcbi8vIENyZWF0ZSBhIHBvcHVwLCBidXQgZG9uJ3QgYWRkIGl0IHRvIHRoZSBtYXAgeWV0LlxyXG52YXIgcG9wdXAgPSBuZXcgbWFwYm94Z2wuUG9wdXAoe1xyXG4gICAgY2xvc2VCdXR0b246IGZhbHNlXHJcbn0pO1xyXG5jb25zb2xlLmxvZyhwb3B1cClcclxuXHJcbnZhciBvdmVybGF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21hcC1vdmVybGF5Jyk7XHJcblxyXG5mZXRjaChqc29uRGF0YSlcclxuICAgIC50aGVuKGRhdGEgPT4gZGF0YS5qc29uKCkpXHJcbiAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKVxyXG4gICAgICAgIGNvbnN0IGFyckZlYXR1cmVzID0gZGF0YS5mZWF0dXJlc1xyXG4gICAgICAgIGFkZFBvcHVwTG9naWMoYXJyRmVhdHVyZXMpXHJcbiAgICB9KVxyXG5cclxuZnVuY3Rpb24gYWRkUG9wdXBMb2dpYyhhcnJGZWF0dXJlcykge1xyXG4gICAgY29uc29sZS5sb2coYXJyRmVhdHVyZXMpXHJcbiAgICBjb25zdCBhcnJDb29yZGluYXRzID0gW11cclxuICAgIGFyckZlYXR1cmVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW11cclxuICAgICAgICByZXN1bHQucHVzaChlbGVtZW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzKVxyXG4gICAgICAgIHJlc3VsdC5wdXNoKGVsZW1lbnQucHJvcGVydGllcy5pZClcclxuICAgICAgICBhcnJDb29yZGluYXRzLnB1c2gocmVzdWx0LmZsYXQoKSlcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCfQnNCw0YHRgdC40LIg0LrQvtC+0YDQtNC40L3QsNGCICcsIGFyckNvb3JkaW5hdHMpXHJcblxyXG5cclxuICAgIGxldCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0cm9uZycpO1xyXG4gICAgdGl0bGUuaW5uZXJIVE1MID0gYGBcclxuXHJcbiAgICAvLyByb3BlcnRpZXNcIjoge1xyXG4gICAgLy8gICAgIFwiaWRcIjogXCJhazE2OTk0NTIzXCIsXHJcbiAgICAvLyAgICAgXCJtYWdcIjogMi4zLFxyXG4gICAgLy8gICAgIFwiYmVuem9sXCI6IDAuMDEsXHJcbiAgICAvLyAgICAgXCJrc2lsb2xcIjogMC4wNCxcclxuICAgIC8vICAgICBcIm5pdHJvZ2VuZGlveGlkZWNvbmNlbnRcIjogMCxcclxuICAgIC8vICAgICBcInNvMlwiOiAwLjA1LFxyXG4gICAgLy8gICAgIFwidG9sdW9sXCI6IDAsXHJcbiAgICAvLyAgICAgXCJ0aW1lXCI6IDE1MDc0MjU2NTA4OTMsXHJcbiAgICAvLyAgICAgXCJmZWx0XCI6IG51bGwsXHJcbiAgICAvLyAgICAgXCJ0c3VuYW1pXCI6IDBcclxuICAgIGxldCBiZW56b2xDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxyXG4gICAgYmVuem9sQ29udGFpbmVyLmlubmVySFRNTCA9ICfQkdC10L3Qt9C+0LsnXHJcbiAgICBsZXQga3NpbG9sQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuICAgIGtzaWxvbENvbnRhaW5lci5pbm5lckhUTUwgPSAn0JrRgdC40LvQvtC7J1xyXG5cclxuICAgIGxldCBwb3B1bGF0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwb3B1bGF0aW9uLmlubmVySFRNTCA9ICcnXHJcblxyXG4gICAgY29uc29sZS5sb2coYXJyRmVhdHVyZXMpXHJcbiAgICBtYXAub24oJ21vdXNlbW92ZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coZSlcclxuICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGBgXHJcbiAgICAgICAgYmVuem9sQ29udGFpbmVyLnRleHRDb250ZW50ID0gYNCR0LXQvdC30L7QuzogYFxyXG4gICAgICAgIGtzaWxvbENvbnRhaW5lci50ZXh0Q29udGVudCA9IGDQmtGB0LjQu9C+0Ls6IGBcclxuICAgICAgICBwb3B1bGF0aW9uLnRleHRDb250ZW50ID0gYGA7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbmZvJykuaW5uZXJIVE1MID1cclxuICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkoZS5wb2ludCkgK1xyXG4gICAgICAgICAgICAnPGJyIC8+JyArXHJcbiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGUubG5nTGF0LndyYXAoKSk7XHJcblxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGUubG5nTGF0LmxuZylcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhlLmxuZ0xhdC5sYXQpXHJcblxyXG4gICAgICAgIGxldCBsbmdGcm9tSlNPTiA9IGUubG5nTGF0LmxuZy50b0ZpeGVkKDIpXHJcbiAgICAgICAgbGV0IGxhdEZyb21KU09OID0gZS5sbmdMYXQubGF0LnRvRml4ZWQoMilcclxuXHJcbiAgICAgICAgYXJyRmVhdHVyZXMuZm9yRWFjaCgodmFsLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygndmFsICcsdmFsKVxyXG4gICAgICAgICAgICBpZiAodmFsLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLnRvRml4ZWQoMikgPT09IGxuZ0Zyb21KU09OICYmIHZhbC5nZW9tZXRyeS5jb29yZGluYXRlc1sxXS50b0ZpeGVkKDIpID09PSBsYXRGcm9tSlNPTikge1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGFyckNvb3JkaW5hdHNbaW5kZXhdWzJdKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codmFsLnByb3BlcnRpZXMpXHJcblxyXG4gICAgICAgICAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBgJHt2YWwucHJvcGVydGllcy5pZH1gXHJcbiAgICAgICAgICAgICAgICBiZW56b2xDb250YWluZXIudGV4dENvbnRlbnQgPSBg0JHQtdC90LfQvtC7OiAke3ZhbC5wcm9wZXJ0aWVzLmJlbnpvbCB8fCAn0J3QtdGCINC00LDQvdC90YvRhSd9YFxyXG4gICAgICAgICAgICAgICAga3NpbG9sQ29udGFpbmVyLnRleHRDb250ZW50ID0gYNCa0YHQuNC70L7QuzogJHt2YWwucHJvcGVydGllcy5rc2lsb2wgfHwgJ9Cd0LXRgiDQtNCw0L3QvdGL0YUnfWBcclxuICAgICAgICAgICAgICAgIHBvcHVsYXRpb24udGV4dENvbnRlbnQgPSAnVG90YWwgcG9wdWxhdGlvbjogJztcclxuXHJcbiAgICAgICAgICAgICAgICBvdmVybGF5LmFwcGVuZENoaWxkKHRpdGxlKTtcclxuICAgICAgICAgICAgICAgIG92ZXJsYXkuYXBwZW5kQ2hpbGQoYmVuem9sQ29udGFpbmVyKTtcclxuICAgICAgICAgICAgICAgIG92ZXJsYXkuYXBwZW5kQ2hpbGQoa3NpbG9sQ29udGFpbmVyKTtcclxuXHJcblxyXG4gICAgICAgICAgICAgICAgb3ZlcmxheS5hcHBlbmRDaGlsZChwb3B1bGF0aW9uKTtcclxuICAgICAgICAgICAgICAgIG92ZXJsYXkuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblxyXG4gICAgICAgICAgICAgICAgcG9wdXBcclxuICAgICAgICAgICAgICAgICAgICAuc2V0TG5nTGF0KGUubG5nTGF0KVxyXG4gICAgICAgICAgICAgICAgICAgIC5zZXRUZXh0KGFyckNvb3JkaW5hdHNbaW5kZXhdWzJdKVxyXG4gICAgICAgICAgICAgICAgICAgIC5hZGRUbyhtYXApO1xyXG5cclxuXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBwb3B1cC5yZW1vdmUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcblxyXG5cclxuXHJcbiAgICB9KTtcclxuXHJcblxyXG59XHJcblxyXG5cclxubWFwLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgbWFwLnNldExheW91dFByb3BlcnR5KCdjb3VudHJ5LWxhYmVsJywgJ3RleHQtZmllbGQnLCBbXHJcbiAgICAgICAgJ2dldCcsXHJcbiAgICAgICAgJ25hbWVfcnUnXHJcbiAgICBdKTtcclxuXHJcbiAgICAvLyBBZGQgYSBnZW9qc29uIHBvaW50IHNvdXJjZS5cclxuICAgIC8vIEhlYXRtYXAgbGF5ZXJzIGFsc28gd29yayB3aXRoIGEgdmVjdG9yIHRpbGUgc291cmNlLlxyXG4gICAgbWFwLmFkZFNvdXJjZSgnZWFydGhxdWFrZXMnLCB7XHJcbiAgICAgICAgJ3R5cGUnOiAnZ2VvanNvbicsXHJcbiAgICAgICAgJ2RhdGEnOiBqc29uRGF0YVxyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIG1hcC5hZGRMYXllcihcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgICdpZCc6ICdlYXJ0aHF1YWtlcy1oZWF0JyxcclxuICAgICAgICAgICAgJ3R5cGUnOiAnaGVhdG1hcCcsXHJcbiAgICAgICAgICAgICdzb3VyY2UnOiAnZWFydGhxdWFrZXMnLFxyXG4gICAgICAgICAgICAnbWF4em9vbSc6IDksXHJcbiAgICAgICAgICAgICdwYWludCc6IHtcclxuICAgICAgICAgICAgICAgIC8vIEluY3JlYXNlIHRoZSBoZWF0bWFwIHdlaWdodCBiYXNlZCBvbiBmcmVxdWVuY3kgYW5kIHByb3BlcnR5IG1hZ25pdHVkZVxyXG4gICAgICAgICAgICAgICAgJ2hlYXRtYXAtd2VpZ2h0JzogW1xyXG4gICAgICAgICAgICAgICAgICAgICdpbnRlcnBvbGF0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgWydsaW5lYXInXSxcclxuICAgICAgICAgICAgICAgICAgICBbJ2dldCcsICdtYWcnXSxcclxuICAgICAgICAgICAgICAgICAgICAwLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgNSxcclxuICAgICAgICAgICAgICAgICAgICAxXHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgLy8gSW5jcmVhc2UgdGhlIGhlYXRtYXAgY29sb3Igd2VpZ2h0IHdlaWdodCBieSB6b29tIGxldmVsXHJcbiAgICAgICAgICAgICAgICAvLyBoZWF0bWFwLWludGVuc2l0eSBpcyBhIG11bHRpcGxpZXIgb24gdG9wIG9mIGhlYXRtYXAtd2VpZ2h0XHJcbiAgICAgICAgICAgICAgICAnaGVhdG1hcC1pbnRlbnNpdHknOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnem9vbSddLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICA5LFxyXG4gICAgICAgICAgICAgICAgICAgIDNcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAvLyBDb2xvciByYW1wIGZvciBoZWF0bWFwLiAgRG9tYWluIGlzIDAgKGxvdykgdG8gMSAoaGlnaCkuXHJcbiAgICAgICAgICAgICAgICAvLyBCZWdpbiBjb2xvciByYW1wIGF0IDAtc3RvcCB3aXRoIGEgMC10cmFuc3BhcmFuY3kgY29sb3JcclxuICAgICAgICAgICAgICAgIC8vIHRvIGNyZWF0ZSBhIGJsdXItbGlrZSBlZmZlY3QuXHJcbiAgICAgICAgICAgICAgICAnaGVhdG1hcC1jb2xvcic6IFtcclxuICAgICAgICAgICAgICAgICAgICAnaW50ZXJwb2xhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnbGluZWFyJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgWydoZWF0bWFwLWRlbnNpdHknXSxcclxuICAgICAgICAgICAgICAgICAgICAwLFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2JhKDMzLDEwMiwxNzIsMCknLFxyXG4gICAgICAgICAgICAgICAgICAgIDAuMixcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDEwMywxNjksMjA3KScsXHJcbiAgICAgICAgICAgICAgICAgICAgMC40LFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMjA5LDIyOSwyNDApJyxcclxuICAgICAgICAgICAgICAgICAgICAwLjYsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYigyNTMsMjE5LDE5OSknLFxyXG4gICAgICAgICAgICAgICAgICAgIDAuOCxcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDIzOSwxMzgsOTgpJyxcclxuICAgICAgICAgICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMTc4LDI0LDQzKSdcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAvLyBBZGp1c3QgdGhlIGhlYXRtYXAgcmFkaXVzIGJ5IHpvb20gbGV2ZWxcclxuICAgICAgICAgICAgICAgICdoZWF0bWFwLXJhZGl1cyc6IFtcclxuICAgICAgICAgICAgICAgICAgICAnaW50ZXJwb2xhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnbGluZWFyJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgWyd6b29tJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgMCxcclxuICAgICAgICAgICAgICAgICAgICAyLFxyXG4gICAgICAgICAgICAgICAgICAgIDksXHJcbiAgICAgICAgICAgICAgICAgICAgMjBcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAvLyBUcmFuc2l0aW9uIGZyb20gaGVhdG1hcCB0byBjaXJjbGUgbGF5ZXIgYnkgem9vbSBsZXZlbFxyXG4gICAgICAgICAgICAgICAgJ2hlYXRtYXAtb3BhY2l0eSc6IFtcclxuICAgICAgICAgICAgICAgICAgICAnaW50ZXJwb2xhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnbGluZWFyJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgWyd6b29tJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgNyxcclxuICAgICAgICAgICAgICAgICAgICAxLFxyXG4gICAgICAgICAgICAgICAgICAgIDksXHJcbiAgICAgICAgICAgICAgICAgICAgMFxyXG4gICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAnd2F0ZXJ3YXktbGFiZWwnXHJcbiAgICApO1xyXG5cclxuICAgIG1hcC5hZGRMYXllcihcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgICdpZCc6ICdlYXJ0aHF1YWtlcy1wb2ludCcsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2NpcmNsZScsXHJcbiAgICAgICAgICAgICdzb3VyY2UnOiAnZWFydGhxdWFrZXMnLFxyXG4gICAgICAgICAgICAnbWluem9vbSc6IDcsXHJcbiAgICAgICAgICAgICdwYWludCc6IHtcclxuICAgICAgICAgICAgICAgIC8vIFNpemUgY2lyY2xlIHJhZGl1cyBieSBlYXJ0aHF1YWtlIG1hZ25pdHVkZSBhbmQgem9vbSBsZXZlbFxyXG4gICAgICAgICAgICAgICAgJ2NpcmNsZS1yYWRpdXMnOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnem9vbSddLFxyXG4gICAgICAgICAgICAgICAgICAgIDcsXHJcbiAgICAgICAgICAgICAgICAgICAgWydpbnRlcnBvbGF0ZScsIFsnbGluZWFyJ10sIFsnZ2V0JywgJ21hZyddLCAxLCAxLCA2LCA0XSxcclxuICAgICAgICAgICAgICAgICAgICAxNixcclxuICAgICAgICAgICAgICAgICAgICBbJ2ludGVycG9sYXRlJywgWydsaW5lYXInXSwgWydnZXQnLCAnbWFnJ10sIDEsIDUsIDYsIDUwXVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIC8vIENvbG9yIGNpcmNsZSBieSBlYXJ0aHF1YWtlIG1hZ25pdHVkZVxyXG4gICAgICAgICAgICAgICAgJ2NpcmNsZS1jb2xvcic6IFtcclxuICAgICAgICAgICAgICAgICAgICAnaW50ZXJwb2xhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnbGluZWFyJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgWydnZXQnLCAnbWFnJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICAncmdiYSgzMywxMDIsMTcyLDApJyxcclxuICAgICAgICAgICAgICAgICAgICAyLFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMTAzLDE2OSwyMDcpJyxcclxuICAgICAgICAgICAgICAgICAgICAzLFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMjA5LDIyOSwyNDApJyxcclxuICAgICAgICAgICAgICAgICAgICA0LFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMjUzLDIxOSwxOTkpJyxcclxuICAgICAgICAgICAgICAgICAgICA1LFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMjM5LDEzOCw5OCknLFxyXG4gICAgICAgICAgICAgICAgICAgIDYsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYigxNzgsMjQsNDMpJ1xyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgICdjaXJjbGUtc3Ryb2tlLWNvbG9yJzogJ3doaXRlJyxcclxuICAgICAgICAgICAgICAgICdjaXJjbGUtc3Ryb2tlLXdpZHRoJzogMSxcclxuICAgICAgICAgICAgICAgIC8vIFRyYW5zaXRpb24gZnJvbSBoZWF0bWFwIHRvIGNpcmNsZSBsYXllciBieSB6b29tIGxldmVsXHJcbiAgICAgICAgICAgICAgICAnY2lyY2xlLW9wYWNpdHknOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnem9vbSddLFxyXG4gICAgICAgICAgICAgICAgICAgIDcsXHJcbiAgICAgICAgICAgICAgICAgICAgMCxcclxuICAgICAgICAgICAgICAgICAgICA4LFxyXG4gICAgICAgICAgICAgICAgICAgIDFcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgJ3dhdGVyd2F5LWxhYmVsJ1xyXG4gICAgKTtcclxufSk7XHJcblxyXG5cclxuLy8gbWFwLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgbWFwLmFkZFNvdXJjZSgnYWlycG9ydHMnLCB7XHJcbi8vICAgICAgICAgJ3R5cGUnOiAndmVjdG9yJyxcclxuLy8gICAgICAgICAndXJsJzogJ21hcGJveDovL21hcGJveC4wNHc2OXc1aidcclxuLy8gICAgIH0pO1xyXG4vLyAgICAgbWFwLmFkZExheWVyKHtcclxuLy8gICAgICAgICAnaWQnOiAnYWlycG9ydCcsXHJcbi8vICAgICAgICAgJ3NvdXJjZSc6ICdhaXJwb3J0cycsXHJcbi8vICAgICAgICAgJ3NvdXJjZS1sYXllcic6ICduZV8xMG1fYWlycG9ydHMnLFxyXG4vLyAgICAgICAgICd0eXBlJzogJ3N5bWJvbCcsXHJcbi8vICAgICAgICAgJ2xheW91dCc6IHtcclxuLy8gICAgICAgICAgICAgJ2ljb24taW1hZ2UnOiAnYWlycG9ydC0xNScsXHJcbi8vICAgICAgICAgICAgICdpY29uLXBhZGRpbmcnOiAwLFxyXG4vLyAgICAgICAgICAgICAnaWNvbi1hbGxvdy1vdmVybGFwJzogdHJ1ZVxyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG5cclxuLy8gICAgIG1hcC5vbignbW92ZWVuZCcsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgICAgICB2YXIgZmVhdHVyZXMgPSBtYXAucXVlcnlSZW5kZXJlZEZlYXR1cmVzKHsgbGF5ZXJzOiBbJ2FpcnBvcnQnXSB9KTtcclxuXHJcbi8vICAgICAgICAgaWYgKGZlYXR1cmVzKSB7XHJcbi8vICAgICAgICAgICAgIHZhciB1bmlxdWVGZWF0dXJlcyA9IGdldFVuaXF1ZUZlYXR1cmVzKGZlYXR1cmVzLCAnaWF0YV9jb2RlJyk7XHJcbi8vICAgICAgICAgICAgIC8vIFBvcHVsYXRlIGZlYXR1cmVzIGZvciB0aGUgbGlzdGluZyBvdmVybGF5LlxyXG4vLyAgICAgICAgICAgICByZW5kZXJMaXN0aW5ncyh1bmlxdWVGZWF0dXJlcyk7XHJcblxyXG4vLyAgICAgICAgICAgICAvLyBDbGVhciB0aGUgaW5wdXQgY29udGFpbmVyXHJcbi8vICAgICAgICAgICAgIGZpbHRlckVsLnZhbHVlID0gJyc7XHJcblxyXG4vLyAgICAgICAgICAgICAvLyBTdG9yZSB0aGUgY3VycmVudCBmZWF0dXJlcyBpbiBzbiBgYWlycG9ydHNgIHZhcmlhYmxlIHRvXHJcbi8vICAgICAgICAgICAgIC8vIGxhdGVyIHVzZSBmb3IgZmlsdGVyaW5nIG9uIGBrZXl1cGAuXHJcbi8vICAgICAgICAgICAgIGFpcnBvcnRzID0gdW5pcXVlRmVhdHVyZXM7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgbWFwLm9uKCdtb3VzZW1vdmUnLCAnYWlycG9ydCcsIGZ1bmN0aW9uIChlKSB7XHJcbi8vICAgICAgICAgLy8gQ2hhbmdlIHRoZSBjdXJzb3Igc3R5bGUgYXMgYSBVSSBpbmRpY2F0b3IuXHJcbi8vICAgICAgICAgbWFwLmdldENhbnZhcygpLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJztcclxuXHJcbi8vICAgICAgICAgLy8gUG9wdWxhdGUgdGhlIHBvcHVwIGFuZCBzZXQgaXRzIGNvb3JkaW5hdGVzIGJhc2VkIG9uIHRoZSBmZWF0dXJlLlxyXG4vLyAgICAgICAgIHZhciBmZWF0dXJlID0gZS5mZWF0dXJlc1swXTtcclxuLy8gICAgICAgICBwb3B1cFxyXG4vLyAgICAgICAgICAgICAuc2V0TG5nTGF0KGZlYXR1cmUuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpXHJcbi8vICAgICAgICAgICAgIC5zZXRUZXh0KFxyXG4vLyAgICAgICAgICAgICAgICAgZmVhdHVyZS5wcm9wZXJ0aWVzLm5hbWUgK1xyXG4vLyAgICAgICAgICAgICAgICAgJyAoJyArXHJcbi8vICAgICAgICAgICAgICAgICBmZWF0dXJlLnByb3BlcnRpZXMuYWJicmV2ICtcclxuLy8gICAgICAgICAgICAgICAgICcpJ1xyXG4vLyAgICAgICAgICAgICApXHJcbi8vICAgICAgICAgICAgIC5hZGRUbyhtYXApO1xyXG4vLyAgICAgfSk7XHJcblxyXG4vLyAgICAgbWFwLm9uKCdtb3VzZWxlYXZlJywgJ2FpcnBvcnQnLCBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAgICAgbWFwLmdldENhbnZhcygpLnN0eWxlLmN1cnNvciA9ICcnO1xyXG4vLyAgICAgICAgIHBvcHVwLnJlbW92ZSgpO1xyXG4vLyAgICAgfSk7Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7Ozs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFDQTtBQUlBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQWlCQTtBQUNBO0FBU0E7QUFDQTtBQXJEQTtBQUxBO0FBQ0E7QUF1RUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFpQkE7QUFDQTtBQUNBO0FBQ0E7QUFoQ0E7QUFMQTtBQWtEQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ecoMap/js/main.js\n");

/***/ }),

/***/ "./src/ecoMap/jsonDATA/data.json":
/*!***************************************!*\
  !*** ./src/ecoMap/jsonDATA/data.json ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"3d8ec5754520396bd18b50cf808d198c.json\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZWNvTWFwL2pzb25EQVRBL2RhdGEuanNvbi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9lY29NYXAvanNvbkRBVEEvZGF0YS5qc29uP2QxNDciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiM2Q4ZWM1NzU0NTIwMzk2YmQxOGI1MGNmODA4ZDE5OGMuanNvblwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ecoMap/jsonDATA/data.json\n");

/***/ })

/******/ });