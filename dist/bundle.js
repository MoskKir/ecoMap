/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ecoMap/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ecoMap/js/main.js":
/*!*******************************!*\
  !*** ./src/ecoMap/js/main.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _data = __webpack_require__(/*! ../jsonDATA/data.json */ \"./src/ecoMap/jsonDATA/data.json\");\n\nvar _data2 = _interopRequireDefault(_data);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import jsonData from 'https://raw.githubusercontent.com/MoskKir/ecoMap/master/src/ecoMap/jsonDATA/data.json'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibW9za2tpciIsImEiOiJjazNoZTAwcTgwYXJiM2JxdDJra2R3NXViIn0.d4xMxIrtPiJpOMbMW3XXLw';\n// pk.eyJ1IjoibW9za2tpciIsImEiOiJjazNoZTAwcTgwYXJiM2JxdDJra2R3NXViIn0.d4xMxIrtPiJpOMbMW3XXLw\n// token for URL with GITHUB pk.eyJ1IjoibW9za2tpciIsImEiOiJjazdwenAycDgwMDJrM2duMXlxY2wyb212In0.1A3TicZXFlulWa55US7ONQ\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/dark-v10',\n    center: [27.56667, 53.9000],\n    zoom: 10\n});\n\n// Create a popup, but don't add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\nconsole.log(popup);\n\nvar overlay = document.getElementById('map-overlay');\n\nfetch('https://moskkir.github.io/ecoMap/dist/3d8ec5754520396bd18b50cf808d198c.json').then(function (data) {\n    return data.json();\n}).then(function (data) {\n    // console.log(data)\n    var arrFeatures = data.features;\n    addPopupLogic(arrFeatures);\n});\n\nfunction addPopupLogic(arrFeatures) {\n    console.log(arrFeatures);\n    var arrCoordinats = [];\n    arrFeatures.forEach(function (element) {\n        var result = [];\n        result.push(element.geometry.coordinates);\n        result.push(element.properties.id);\n        arrCoordinats.push(result.flat());\n    });\n\n    console.log('Массив координат ', arrCoordinats);\n\n    var title = document.createElement('strong');\n    title.innerHTML = '';\n\n    // roperties\": {\n    //     \"id\": \"ak16994523\",\n    //     \"mag\": 2.3,\n    //     \"benzol\": 0.01,\n    //     \"ksilol\": 0.04,\n    //     \"nitrogendioxideconcent\": 0,\n    //     \"so2\": 0.05,\n    //     \"toluol\": 0,\n    //     \"time\": 1507425650893,\n    //     \"felt\": null,\n    //     \"tsunami\": 0\n    var benzolContainer = document.createElement('div');\n    benzolContainer.innerHTML = 'Бензол';\n    var ksilolContainer = document.createElement('div');\n    ksilolContainer.innerHTML = 'Ксилол';\n\n    var population = document.createElement('div');\n    population.innerHTML = '';\n\n    console.log(arrFeatures);\n    map.on('mousemove', function (e) {\n        // console.log(e)\n        title.textContent = '';\n        benzolContainer.textContent = '\\u0411\\u0435\\u043D\\u0437\\u043E\\u043B: ';\n        ksilolContainer.textContent = '\\u041A\\u0441\\u0438\\u043B\\u043E\\u043B: ';\n        population.textContent = '';\n\n        document.getElementById('info').innerHTML = JSON.stringify(e.point) + '<br />' + JSON.stringify(e.lngLat.wrap());\n\n        // console.log(e.lngLat.lng)\n        // console.log(e.lngLat.lat)\n\n        var lngFromJSON = e.lngLat.lng.toFixed(2);\n        var latFromJSON = e.lngLat.lat.toFixed(2);\n\n        arrFeatures.forEach(function (val, index) {\n            // console.log('val ',val)\n            if (val.geometry.coordinates[0].toFixed(2) === lngFromJSON && val.geometry.coordinates[1].toFixed(2) === latFromJSON) {\n\n                // console.log(arrCoordinats[index][2])\n                console.log(val.properties);\n\n                title.textContent = '' + val.properties.id;\n                benzolContainer.textContent = '\\u0411\\u0435\\u043D\\u0437\\u043E\\u043B: ' + (val.properties.benzol || 'Нет данных');\n                ksilolContainer.textContent = '\\u041A\\u0441\\u0438\\u043B\\u043E\\u043B: ' + (val.properties.ksilol || 'Нет данных');\n                population.textContent = 'Total population: ';\n\n                overlay.appendChild(title);\n                overlay.appendChild(benzolContainer);\n                overlay.appendChild(ksilolContainer);\n\n                overlay.appendChild(population);\n                overlay.style.display = 'block';\n\n                popup.setLngLat(e.lngLat).setText(arrCoordinats[index][2]).addTo(map);\n            } else {\n                popup.remove();\n            }\n        });\n    });\n}\n\nmap.on('load', function () {\n    map.setLayoutProperty('country-label', 'text-field', ['get', 'name_ru']);\n\n    // Add a geojson point source.\n    // Heatmap layers also work with a vector tile source.\n    map.addSource('earthquakes', {\n        'type': 'geojson',\n        'data': _data2.default\n    });\n\n    map.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'earthquakes',\n        'maxzoom': 9,\n        'paint': {\n            // Increase the heatmap weight based on frequency and property magnitude\n            'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 5, 1],\n            // Increase the heatmap color weight weight by zoom level\n            // heatmap-intensity is a multiplier on top of heatmap-weight\n            'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n            // Begin color ramp at 0-stop with a 0-transparancy color\n            // to create a blur-like effect.\n            'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n            // Adjust the heatmap radius by zoom level\n            'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n            // Transition from heatmap to circle layer by zoom level\n            'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n    }, 'waterway-label');\n\n    map.addLayer({\n        'id': 'earthquakes-point',\n        'type': 'circle',\n        'source': 'earthquakes',\n        'minzoom': 7,\n        'paint': {\n            // Size circle radius by earthquake magnitude and zoom level\n            'circle-radius': ['interpolate', ['linear'], ['zoom'], 7, ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4], 16, ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]],\n            // Color circle by earthquake magnitude\n            'circle-color': ['interpolate', ['linear'], ['get', 'mag'], 1, 'rgba(33,102,172,0)', 2, 'rgb(103,169,207)', 3, 'rgb(209,229,240)', 4, 'rgb(253,219,199)', 5, 'rgb(239,138,98)', 6, 'rgb(178,24,43)'],\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 1,\n            // Transition from heatmap to circle layer by zoom level\n            'circle-opacity': ['interpolate', ['linear'], ['zoom'], 7, 0, 8, 1]\n        }\n    }, 'waterway-label');\n});\n\n// map.on('load', function () {\n//     map.addSource('airports', {\n//         'type': 'vector',\n//         'url': 'mapbox://mapbox.04w69w5j'\n//     });\n//     map.addLayer({\n//         'id': 'airport',\n//         'source': 'airports',\n//         'source-layer': 'ne_10m_airports',\n//         'type': 'symbol',\n//         'layout': {\n//             'icon-image': 'airport-15',\n//             'icon-padding': 0,\n//             'icon-allow-overlap': true\n//         }\n//     });\n\n//     map.on('moveend', function () {\n//         var features = map.queryRenderedFeatures({ layers: ['airport'] });\n\n//         if (features) {\n//             var uniqueFeatures = getUniqueFeatures(features, 'iata_code');\n//             // Populate features for the listing overlay.\n//             renderListings(uniqueFeatures);\n\n//             // Clear the input container\n//             filterEl.value = '';\n\n//             // Store the current features in sn `airports` variable to\n//             // later use for filtering on `keyup`.\n//             airports = uniqueFeatures;\n//         }\n//     });\n\n//     map.on('mousemove', 'airport', function (e) {\n//         // Change the cursor style as a UI indicator.\n//         map.getCanvas().style.cursor = 'pointer';\n\n//         // Populate the popup and set its coordinates based on the feature.\n//         var feature = e.features[0];\n//         popup\n//             .setLngLat(feature.geometry.coordinates)\n//             .setText(\n//                 feature.properties.name +\n//                 ' (' +\n//                 feature.properties.abbrev +\n//                 ')'\n//             )\n//             .addTo(map);\n//     });\n\n//     map.on('mouseleave', 'airport', function () {\n//         map.getCanvas().style.cursor = '';\n//         popup.remove();\n//     });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZWNvTWFwL2pzL21haW4uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2Vjb01hcC9qcy9tYWluLmpzPzUxMjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGpzb25EYXRhIGZyb20gJy4uL2pzb25EQVRBL2RhdGEuanNvbic7XHJcbi8vIGltcG9ydCBqc29uRGF0YSBmcm9tICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTW9za0tpci9lY29NYXAvbWFzdGVyL3NyYy9lY29NYXAvanNvbkRBVEEvZGF0YS5qc29uJ1xyXG5cclxubWFwYm94Z2wuYWNjZXNzVG9rZW4gPSAncGsuZXlKMUlqb2liVzl6YTJ0cGNpSXNJbUVpT2lKamF6Tm9aVEF3Y1Rnd1lYSmlNMkp4ZERKcmEyUjNOWFZpSW4wLmQ0eE14SXJ0UGlKcE9NYk1XM1hYTHcnO1xyXG4vLyBway5leUoxSWpvaWJXOXphMnRwY2lJc0ltRWlPaUpqYXpOb1pUQXdjVGd3WVhKaU0ySnhkREpyYTJSM05YVmlJbjAuZDR4TXhJcnRQaUpwT01iTVczWFhMd1xyXG4vLyB0b2tlbiBmb3IgVVJMIHdpdGggR0lUSFVCIHBrLmV5SjFJam9pYlc5emEydHBjaUlzSW1FaU9pSmphemR3ZW5BeWNEZ3dNREpyTTJkdU1YbHhZMnd5YjIxMkluMC4xQTNUaWNaWEZsdWxXYTU1VVM3T05RXHJcbnZhciBtYXAgPSBuZXcgbWFwYm94Z2wuTWFwKHtcclxuICAgIGNvbnRhaW5lcjogJ21hcCcsXHJcbiAgICBzdHlsZTogJ21hcGJveDovL3N0eWxlcy9tYXBib3gvZGFyay12MTAnLFxyXG4gICAgY2VudGVyOiBbMjcuNTY2NjcsIDUzLjkwMDBdLFxyXG4gICAgem9vbTogMTBcclxufSk7XHJcblxyXG4vLyBDcmVhdGUgYSBwb3B1cCwgYnV0IGRvbid0IGFkZCBpdCB0byB0aGUgbWFwIHlldC5cclxudmFyIHBvcHVwID0gbmV3IG1hcGJveGdsLlBvcHVwKHtcclxuICAgIGNsb3NlQnV0dG9uOiBmYWxzZVxyXG59KTtcclxuY29uc29sZS5sb2cocG9wdXApXHJcblxyXG52YXIgb3ZlcmxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAtb3ZlcmxheScpO1xyXG5cclxuZmV0Y2goJ2h0dHBzOi8vbW9za2tpci5naXRodWIuaW8vZWNvTWFwL2Rpc3QvM2Q4ZWM1NzU0NTIwMzk2YmQxOGI1MGNmODA4ZDE5OGMuanNvbicpXHJcbiAgICAudGhlbihkYXRhID0+IGRhdGEuanNvbigpKVxyXG4gICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgICBjb25zdCBhcnJGZWF0dXJlcyA9IGRhdGEuZmVhdHVyZXNcclxuICAgICAgICBhZGRQb3B1cExvZ2ljKGFyckZlYXR1cmVzKVxyXG4gICAgfSlcclxuXHJcbmZ1bmN0aW9uIGFkZFBvcHVwTG9naWMoYXJyRmVhdHVyZXMpIHtcclxuICAgIGNvbnNvbGUubG9nKGFyckZlYXR1cmVzKVxyXG4gICAgY29uc3QgYXJyQ29vcmRpbmF0cyA9IFtdXHJcbiAgICBhcnJGZWF0dXJlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdXHJcbiAgICAgICAgcmVzdWx0LnB1c2goZWxlbWVudC5nZW9tZXRyeS5jb29yZGluYXRlcylcclxuICAgICAgICByZXN1bHQucHVzaChlbGVtZW50LnByb3BlcnRpZXMuaWQpXHJcbiAgICAgICAgYXJyQ29vcmRpbmF0cy5wdXNoKHJlc3VsdC5mbGF0KCkpXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygn0JzQsNGB0YHQuNCyINC60L7QvtGA0LTQuNC90LDRgiAnLCBhcnJDb29yZGluYXRzKVxyXG5cclxuXHJcbiAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHJvbmcnKTtcclxuICAgIHRpdGxlLmlubmVySFRNTCA9IGBgXHJcblxyXG4gICAgLy8gcm9wZXJ0aWVzXCI6IHtcclxuICAgIC8vICAgICBcImlkXCI6IFwiYWsxNjk5NDUyM1wiLFxyXG4gICAgLy8gICAgIFwibWFnXCI6IDIuMyxcclxuICAgIC8vICAgICBcImJlbnpvbFwiOiAwLjAxLFxyXG4gICAgLy8gICAgIFwia3NpbG9sXCI6IDAuMDQsXHJcbiAgICAvLyAgICAgXCJuaXRyb2dlbmRpb3hpZGVjb25jZW50XCI6IDAsXHJcbiAgICAvLyAgICAgXCJzbzJcIjogMC4wNSxcclxuICAgIC8vICAgICBcInRvbHVvbFwiOiAwLFxyXG4gICAgLy8gICAgIFwidGltZVwiOiAxNTA3NDI1NjUwODkzLFxyXG4gICAgLy8gICAgIFwiZmVsdFwiOiBudWxsLFxyXG4gICAgLy8gICAgIFwidHN1bmFtaVwiOiAwXHJcbiAgICBsZXQgYmVuem9sQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcclxuICAgIGJlbnpvbENvbnRhaW5lci5pbm5lckhUTUwgPSAn0JHQtdC90LfQvtC7J1xyXG4gICAgbGV0IGtzaWxvbENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXHJcbiAgICBrc2lsb2xDb250YWluZXIuaW5uZXJIVE1MID0gJ9Ca0YHQuNC70L7QuydcclxuXHJcbiAgICBsZXQgcG9wdWxhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcG9wdWxhdGlvbi5pbm5lckhUTUwgPSAnJ1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGFyckZlYXR1cmVzKVxyXG4gICAgbWFwLm9uKCdtb3VzZW1vdmUnLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGUpXHJcbiAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBgYFxyXG4gICAgICAgIGJlbnpvbENvbnRhaW5lci50ZXh0Q29udGVudCA9IGDQkdC10L3Qt9C+0Ls6IGBcclxuICAgICAgICBrc2lsb2xDb250YWluZXIudGV4dENvbnRlbnQgPSBg0JrRgdC40LvQvtC7OiBgXHJcbiAgICAgICAgcG9wdWxhdGlvbi50ZXh0Q29udGVudCA9IGBgO1xyXG5cclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5mbycpLmlubmVySFRNTCA9XHJcbiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGUucG9pbnQpICtcclxuICAgICAgICAgICAgJzxiciAvPicgK1xyXG4gICAgICAgICAgICBKU09OLnN0cmluZ2lmeShlLmxuZ0xhdC53cmFwKCkpO1xyXG5cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhlLmxuZ0xhdC5sbmcpXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coZS5sbmdMYXQubGF0KVxyXG5cclxuICAgICAgICBsZXQgbG5nRnJvbUpTT04gPSBlLmxuZ0xhdC5sbmcudG9GaXhlZCgyKVxyXG4gICAgICAgIGxldCBsYXRGcm9tSlNPTiA9IGUubG5nTGF0LmxhdC50b0ZpeGVkKDIpXHJcblxyXG4gICAgICAgIGFyckZlYXR1cmVzLmZvckVhY2goKHZhbCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3ZhbCAnLHZhbClcclxuICAgICAgICAgICAgaWYgKHZhbC5nZW9tZXRyeS5jb29yZGluYXRlc1swXS50b0ZpeGVkKDIpID09PSBsbmdGcm9tSlNPTiAmJiB2YWwuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0udG9GaXhlZCgyKSA9PT0gbGF0RnJvbUpTT04pIHtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhhcnJDb29yZGluYXRzW2luZGV4XVsyXSlcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHZhbC5wcm9wZXJ0aWVzKVxyXG5cclxuICAgICAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYCR7dmFsLnByb3BlcnRpZXMuaWR9YFxyXG4gICAgICAgICAgICAgICAgYmVuem9sQ29udGFpbmVyLnRleHRDb250ZW50ID0gYNCR0LXQvdC30L7QuzogJHt2YWwucHJvcGVydGllcy5iZW56b2wgfHwgJ9Cd0LXRgiDQtNCw0L3QvdGL0YUnfWBcclxuICAgICAgICAgICAgICAgIGtzaWxvbENvbnRhaW5lci50ZXh0Q29udGVudCA9IGDQmtGB0LjQu9C+0Ls6ICR7dmFsLnByb3BlcnRpZXMua3NpbG9sIHx8ICfQndC10YIg0LTQsNC90L3Ri9GFJ31gXHJcbiAgICAgICAgICAgICAgICBwb3B1bGF0aW9uLnRleHRDb250ZW50ID0gJ1RvdGFsIHBvcHVsYXRpb246ICc7XHJcblxyXG4gICAgICAgICAgICAgICAgb3ZlcmxheS5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcbiAgICAgICAgICAgICAgICBvdmVybGF5LmFwcGVuZENoaWxkKGJlbnpvbENvbnRhaW5lcik7XHJcbiAgICAgICAgICAgICAgICBvdmVybGF5LmFwcGVuZENoaWxkKGtzaWxvbENvbnRhaW5lcik7XHJcblxyXG5cclxuICAgICAgICAgICAgICAgIG92ZXJsYXkuYXBwZW5kQ2hpbGQocG9wdWxhdGlvbik7XHJcbiAgICAgICAgICAgICAgICBvdmVybGF5LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cclxuICAgICAgICAgICAgICAgIHBvcHVwXHJcbiAgICAgICAgICAgICAgICAgICAgLnNldExuZ0xhdChlLmxuZ0xhdClcclxuICAgICAgICAgICAgICAgICAgICAuc2V0VGV4dChhcnJDb29yZGluYXRzW2luZGV4XVsyXSlcclxuICAgICAgICAgICAgICAgICAgICAuYWRkVG8obWFwKTtcclxuXHJcblxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcG9wdXAucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG5cclxuXHJcblxyXG4gICAgfSk7XHJcblxyXG5cclxufVxyXG5cclxuXHJcbm1hcC5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnY291bnRyeS1sYWJlbCcsICd0ZXh0LWZpZWxkJywgW1xyXG4gICAgICAgICdnZXQnLFxyXG4gICAgICAgICduYW1lX3J1J1xyXG4gICAgXSk7XHJcblxyXG4gICAgLy8gQWRkIGEgZ2VvanNvbiBwb2ludCBzb3VyY2UuXHJcbiAgICAvLyBIZWF0bWFwIGxheWVycyBhbHNvIHdvcmsgd2l0aCBhIHZlY3RvciB0aWxlIHNvdXJjZS5cclxuICAgIG1hcC5hZGRTb3VyY2UoJ2VhcnRocXVha2VzJywge1xyXG4gICAgICAgICd0eXBlJzogJ2dlb2pzb24nLFxyXG4gICAgICAgICdkYXRhJzoganNvbkRhdGFcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBtYXAuYWRkTGF5ZXIoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAnaWQnOiAnZWFydGhxdWFrZXMtaGVhdCcsXHJcbiAgICAgICAgICAgICd0eXBlJzogJ2hlYXRtYXAnLFxyXG4gICAgICAgICAgICAnc291cmNlJzogJ2VhcnRocXVha2VzJyxcclxuICAgICAgICAgICAgJ21heHpvb20nOiA5LFxyXG4gICAgICAgICAgICAncGFpbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAvLyBJbmNyZWFzZSB0aGUgaGVhdG1hcCB3ZWlnaHQgYmFzZWQgb24gZnJlcXVlbmN5IGFuZCBwcm9wZXJ0eSBtYWduaXR1ZGVcclxuICAgICAgICAgICAgICAgICdoZWF0bWFwLXdlaWdodCc6IFtcclxuICAgICAgICAgICAgICAgICAgICAnaW50ZXJwb2xhdGUnLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnbGluZWFyJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgWydnZXQnLCAnbWFnJ10sXHJcbiAgICAgICAgICAgICAgICAgICAgMCxcclxuICAgICAgICAgICAgICAgICAgICAwLFxyXG4gICAgICAgICAgICAgICAgICAgIDUsXHJcbiAgICAgICAgICAgICAgICAgICAgMVxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgICAgIC8vIEluY3JlYXNlIHRoZSBoZWF0bWFwIGNvbG9yIHdlaWdodCB3ZWlnaHQgYnkgem9vbSBsZXZlbFxyXG4gICAgICAgICAgICAgICAgLy8gaGVhdG1hcC1pbnRlbnNpdHkgaXMgYSBtdWx0aXBsaWVyIG9uIHRvcCBvZiBoZWF0bWFwLXdlaWdodFxyXG4gICAgICAgICAgICAgICAgJ2hlYXRtYXAtaW50ZW5zaXR5JzogW1xyXG4gICAgICAgICAgICAgICAgICAgICdpbnRlcnBvbGF0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgWydsaW5lYXInXSxcclxuICAgICAgICAgICAgICAgICAgICBbJ3pvb20nXSxcclxuICAgICAgICAgICAgICAgICAgICAwLFxyXG4gICAgICAgICAgICAgICAgICAgIDEsXHJcbiAgICAgICAgICAgICAgICAgICAgOSxcclxuICAgICAgICAgICAgICAgICAgICAzXHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgLy8gQ29sb3IgcmFtcCBmb3IgaGVhdG1hcC4gIERvbWFpbiBpcyAwIChsb3cpIHRvIDEgKGhpZ2gpLlxyXG4gICAgICAgICAgICAgICAgLy8gQmVnaW4gY29sb3IgcmFtcCBhdCAwLXN0b3Agd2l0aCBhIDAtdHJhbnNwYXJhbmN5IGNvbG9yXHJcbiAgICAgICAgICAgICAgICAvLyB0byBjcmVhdGUgYSBibHVyLWxpa2UgZWZmZWN0LlxyXG4gICAgICAgICAgICAgICAgJ2hlYXRtYXAtY29sb3InOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnaGVhdG1hcC1kZW5zaXR5J10sXHJcbiAgICAgICAgICAgICAgICAgICAgMCxcclxuICAgICAgICAgICAgICAgICAgICAncmdiYSgzMywxMDIsMTcyLDApJyxcclxuICAgICAgICAgICAgICAgICAgICAwLjIsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYigxMDMsMTY5LDIwNyknLFxyXG4gICAgICAgICAgICAgICAgICAgIDAuNCxcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDIwOSwyMjksMjQwKScsXHJcbiAgICAgICAgICAgICAgICAgICAgMC42LFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMjUzLDIxOSwxOTkpJyxcclxuICAgICAgICAgICAgICAgICAgICAwLjgsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYigyMzksMTM4LDk4KScsXHJcbiAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDE3OCwyNCw0MyknXHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgLy8gQWRqdXN0IHRoZSBoZWF0bWFwIHJhZGl1cyBieSB6b29tIGxldmVsXHJcbiAgICAgICAgICAgICAgICAnaGVhdG1hcC1yYWRpdXMnOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnem9vbSddLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgMixcclxuICAgICAgICAgICAgICAgICAgICA5LFxyXG4gICAgICAgICAgICAgICAgICAgIDIwXHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgLy8gVHJhbnNpdGlvbiBmcm9tIGhlYXRtYXAgdG8gY2lyY2xlIGxheWVyIGJ5IHpvb20gbGV2ZWxcclxuICAgICAgICAgICAgICAgICdoZWF0bWFwLW9wYWNpdHknOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnem9vbSddLFxyXG4gICAgICAgICAgICAgICAgICAgIDcsXHJcbiAgICAgICAgICAgICAgICAgICAgMSxcclxuICAgICAgICAgICAgICAgICAgICA5LFxyXG4gICAgICAgICAgICAgICAgICAgIDBcclxuICAgICAgICAgICAgICAgIF1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgJ3dhdGVyd2F5LWxhYmVsJ1xyXG4gICAgKTtcclxuXHJcbiAgICBtYXAuYWRkTGF5ZXIoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAnaWQnOiAnZWFydGhxdWFrZXMtcG9pbnQnLFxyXG4gICAgICAgICAgICAndHlwZSc6ICdjaXJjbGUnLFxyXG4gICAgICAgICAgICAnc291cmNlJzogJ2VhcnRocXVha2VzJyxcclxuICAgICAgICAgICAgJ21pbnpvb20nOiA3LFxyXG4gICAgICAgICAgICAncGFpbnQnOiB7XHJcbiAgICAgICAgICAgICAgICAvLyBTaXplIGNpcmNsZSByYWRpdXMgYnkgZWFydGhxdWFrZSBtYWduaXR1ZGUgYW5kIHpvb20gbGV2ZWxcclxuICAgICAgICAgICAgICAgICdjaXJjbGUtcmFkaXVzJzogW1xyXG4gICAgICAgICAgICAgICAgICAgICdpbnRlcnBvbGF0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgWydsaW5lYXInXSxcclxuICAgICAgICAgICAgICAgICAgICBbJ3pvb20nXSxcclxuICAgICAgICAgICAgICAgICAgICA3LFxyXG4gICAgICAgICAgICAgICAgICAgIFsnaW50ZXJwb2xhdGUnLCBbJ2xpbmVhciddLCBbJ2dldCcsICdtYWcnXSwgMSwgMSwgNiwgNF0sXHJcbiAgICAgICAgICAgICAgICAgICAgMTYsXHJcbiAgICAgICAgICAgICAgICAgICAgWydpbnRlcnBvbGF0ZScsIFsnbGluZWFyJ10sIFsnZ2V0JywgJ21hZyddLCAxLCA1LCA2LCA1MF1cclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAvLyBDb2xvciBjaXJjbGUgYnkgZWFydGhxdWFrZSBtYWduaXR1ZGVcclxuICAgICAgICAgICAgICAgICdjaXJjbGUtY29sb3InOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgJ2ludGVycG9sYXRlJyxcclxuICAgICAgICAgICAgICAgICAgICBbJ2xpbmVhciddLFxyXG4gICAgICAgICAgICAgICAgICAgIFsnZ2V0JywgJ21hZyddLFxyXG4gICAgICAgICAgICAgICAgICAgIDEsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYmEoMzMsMTAyLDE3MiwwKScsXHJcbiAgICAgICAgICAgICAgICAgICAgMixcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDEwMywxNjksMjA3KScsXHJcbiAgICAgICAgICAgICAgICAgICAgMyxcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDIwOSwyMjksMjQwKScsXHJcbiAgICAgICAgICAgICAgICAgICAgNCxcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDI1MywyMTksMTk5KScsXHJcbiAgICAgICAgICAgICAgICAgICAgNSxcclxuICAgICAgICAgICAgICAgICAgICAncmdiKDIzOSwxMzgsOTgpJyxcclxuICAgICAgICAgICAgICAgICAgICA2LFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2IoMTc4LDI0LDQzKSdcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgICAnY2lyY2xlLXN0cm9rZS1jb2xvcic6ICd3aGl0ZScsXHJcbiAgICAgICAgICAgICAgICAnY2lyY2xlLXN0cm9rZS13aWR0aCc6IDEsXHJcbiAgICAgICAgICAgICAgICAvLyBUcmFuc2l0aW9uIGZyb20gaGVhdG1hcCB0byBjaXJjbGUgbGF5ZXIgYnkgem9vbSBsZXZlbFxyXG4gICAgICAgICAgICAgICAgJ2NpcmNsZS1vcGFjaXR5JzogW1xyXG4gICAgICAgICAgICAgICAgICAgICdpbnRlcnBvbGF0ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgWydsaW5lYXInXSxcclxuICAgICAgICAgICAgICAgICAgICBbJ3pvb20nXSxcclxuICAgICAgICAgICAgICAgICAgICA3LFxyXG4gICAgICAgICAgICAgICAgICAgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgOCxcclxuICAgICAgICAgICAgICAgICAgICAxXHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgICd3YXRlcndheS1sYWJlbCdcclxuICAgICk7XHJcbn0pO1xyXG5cclxuXHJcbi8vIG1hcC5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIG1hcC5hZGRTb3VyY2UoJ2FpcnBvcnRzJywge1xyXG4vLyAgICAgICAgICd0eXBlJzogJ3ZlY3RvcicsXHJcbi8vICAgICAgICAgJ3VybCc6ICdtYXBib3g6Ly9tYXBib3guMDR3Njl3NWonXHJcbi8vICAgICB9KTtcclxuLy8gICAgIG1hcC5hZGRMYXllcih7XHJcbi8vICAgICAgICAgJ2lkJzogJ2FpcnBvcnQnLFxyXG4vLyAgICAgICAgICdzb3VyY2UnOiAnYWlycG9ydHMnLFxyXG4vLyAgICAgICAgICdzb3VyY2UtbGF5ZXInOiAnbmVfMTBtX2FpcnBvcnRzJyxcclxuLy8gICAgICAgICAndHlwZSc6ICdzeW1ib2wnLFxyXG4vLyAgICAgICAgICdsYXlvdXQnOiB7XHJcbi8vICAgICAgICAgICAgICdpY29uLWltYWdlJzogJ2FpcnBvcnQtMTUnLFxyXG4vLyAgICAgICAgICAgICAnaWNvbi1wYWRkaW5nJzogMCxcclxuLy8gICAgICAgICAgICAgJ2ljb24tYWxsb3ctb3ZlcmxhcCc6IHRydWVcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KTtcclxuXHJcbi8vICAgICBtYXAub24oJ21vdmVlbmQnLCBmdW5jdGlvbiAoKSB7XHJcbi8vICAgICAgICAgdmFyIGZlYXR1cmVzID0gbWFwLnF1ZXJ5UmVuZGVyZWRGZWF0dXJlcyh7IGxheWVyczogWydhaXJwb3J0J10gfSk7XHJcblxyXG4vLyAgICAgICAgIGlmIChmZWF0dXJlcykge1xyXG4vLyAgICAgICAgICAgICB2YXIgdW5pcXVlRmVhdHVyZXMgPSBnZXRVbmlxdWVGZWF0dXJlcyhmZWF0dXJlcywgJ2lhdGFfY29kZScpO1xyXG4vLyAgICAgICAgICAgICAvLyBQb3B1bGF0ZSBmZWF0dXJlcyBmb3IgdGhlIGxpc3Rpbmcgb3ZlcmxheS5cclxuLy8gICAgICAgICAgICAgcmVuZGVyTGlzdGluZ3ModW5pcXVlRmVhdHVyZXMpO1xyXG5cclxuLy8gICAgICAgICAgICAgLy8gQ2xlYXIgdGhlIGlucHV0IGNvbnRhaW5lclxyXG4vLyAgICAgICAgICAgICBmaWx0ZXJFbC52YWx1ZSA9ICcnO1xyXG5cclxuLy8gICAgICAgICAgICAgLy8gU3RvcmUgdGhlIGN1cnJlbnQgZmVhdHVyZXMgaW4gc24gYGFpcnBvcnRzYCB2YXJpYWJsZSB0b1xyXG4vLyAgICAgICAgICAgICAvLyBsYXRlciB1c2UgZm9yIGZpbHRlcmluZyBvbiBga2V5dXBgLlxyXG4vLyAgICAgICAgICAgICBhaXJwb3J0cyA9IHVuaXF1ZUZlYXR1cmVzO1xyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pO1xyXG5cclxuLy8gICAgIG1hcC5vbignbW91c2Vtb3ZlJywgJ2FpcnBvcnQnLCBmdW5jdGlvbiAoZSkge1xyXG4vLyAgICAgICAgIC8vIENoYW5nZSB0aGUgY3Vyc29yIHN0eWxlIGFzIGEgVUkgaW5kaWNhdG9yLlxyXG4vLyAgICAgICAgIG1hcC5nZXRDYW52YXMoKS5zdHlsZS5jdXJzb3IgPSAncG9pbnRlcic7XHJcblxyXG4vLyAgICAgICAgIC8vIFBvcHVsYXRlIHRoZSBwb3B1cCBhbmQgc2V0IGl0cyBjb29yZGluYXRlcyBiYXNlZCBvbiB0aGUgZmVhdHVyZS5cclxuLy8gICAgICAgICB2YXIgZmVhdHVyZSA9IGUuZmVhdHVyZXNbMF07XHJcbi8vICAgICAgICAgcG9wdXBcclxuLy8gICAgICAgICAgICAgLnNldExuZ0xhdChmZWF0dXJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzKVxyXG4vLyAgICAgICAgICAgICAuc2V0VGV4dChcclxuLy8gICAgICAgICAgICAgICAgIGZlYXR1cmUucHJvcGVydGllcy5uYW1lICtcclxuLy8gICAgICAgICAgICAgICAgICcgKCcgK1xyXG4vLyAgICAgICAgICAgICAgICAgZmVhdHVyZS5wcm9wZXJ0aWVzLmFiYnJldiArXHJcbi8vICAgICAgICAgICAgICAgICAnKSdcclxuLy8gICAgICAgICAgICAgKVxyXG4vLyAgICAgICAgICAgICAuYWRkVG8obWFwKTtcclxuLy8gICAgIH0pO1xyXG5cclxuLy8gICAgIG1hcC5vbignbW91c2VsZWF2ZScsICdhaXJwb3J0JywgZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgICAgIG1hcC5nZXRDYW52YXMoKS5zdHlsZS5jdXJzb3IgPSAnJztcclxuLy8gICAgICAgICBwb3B1cC5yZW1vdmUoKTtcclxuLy8gICAgIH0pOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBaUJBO0FBQ0E7QUFTQTtBQUNBO0FBckRBO0FBTEE7QUFDQTtBQXVFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBU0E7QUFDQTtBQWlCQTtBQUNBO0FBQ0E7QUFDQTtBQWhDQTtBQUxBO0FBa0RBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ecoMap/js/main.js\n");

/***/ }),

/***/ "./src/ecoMap/jsonDATA/data.json":
/*!***************************************!*\
  !*** ./src/ecoMap/jsonDATA/data.json ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"3d8ec5754520396bd18b50cf808d198c.json\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZWNvTWFwL2pzb25EQVRBL2RhdGEuanNvbi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9lY29NYXAvanNvbkRBVEEvZGF0YS5qc29uP2QxNDciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiM2Q4ZWM1NzU0NTIwMzk2YmQxOGI1MGNmODA4ZDE5OGMuanNvblwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ecoMap/jsonDATA/data.json\n");

/***/ })

/******/ });