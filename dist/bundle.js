/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ecoMap/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ecoMap/js/main.js":
/*!*******************************!*\
  !*** ./src/ecoMap/js/main.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _data = __webpack_require__(/*! ../jsonDATA/data.json */ \"./src/ecoMap/jsonDATA/data.json\");\n\nvar _data2 = _interopRequireDefault(_data);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import jsonData from 'https://raw.githubusercontent.com/MoskKir/ecoMap/master/src/ecoMap/jsonDATA/data.json'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibW9za2tpciIsImEiOiJjazNoZTAwcTgwYXJiM2JxdDJra2R3NXViIn0.d4xMxIrtPiJpOMbMW3XXLw';\n// pk.eyJ1IjoibW9za2tpciIsImEiOiJjazNoZTAwcTgwYXJiM2JxdDJra2R3NXViIn0.d4xMxIrtPiJpOMbMW3XXLw\n// token for URL with GITHUB pk.eyJ1IjoibW9za2tpciIsImEiOiJjazdwenAycDgwMDJrM2duMXlxY2wyb212In0.1A3TicZXFlulWa55US7ONQ\nvar map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/mapbox/dark-v10',\n    center: [27.56667, 53.9000],\n    zoom: 10\n});\n\n// Create a popup, but don't add it to the map yet.\nvar popup = new mapboxgl.Popup({\n    closeButton: false\n});\nconsole.log(popup);\n\nvar overlay = document.getElementById('map-overlay');\n\nfetch('https://raw.githubusercontent.com/MoskKir/ecoMap/master/src/ecoMap/jsonDATA/data.json').then(function (data) {\n    return data.json();\n}).then(function (data) {\n    // console.log(data)\n    var arrFeatures = data.features;\n    addPopupLogic(arrFeatures);\n});\n\nfunction addPopupLogic(arrFeatures) {\n    console.log(arrFeatures);\n    var arrCoordinats = [];\n    arrFeatures.forEach(function (element) {\n        var result = [];\n        result.push(element.geometry.coordinates);\n        result.push(element.properties.id);\n        arrCoordinats.push(result.flat());\n    });\n\n    console.log('Массив координат ', arrCoordinats);\n\n    var title = document.createElement('strong');\n    title.innerHTML = '';\n\n    // roperties\": {\n    //     \"id\": \"ak16994523\",\n    //     \"mag\": 2.3,\n    //     \"benzol\": 0.01,\n    //     \"ksilol\": 0.04,\n    //     \"nitrogendioxideconcent\": 0,\n    //     \"so2\": 0.05,\n    //     \"toluol\": 0,\n    //     \"time\": 1507425650893,\n    //     \"felt\": null,\n    //     \"tsunami\": 0\n    var benzolContainer = document.createElement('div');\n    benzolContainer.innerHTML = 'Бензол';\n    var ksilolContainer = document.createElement('div');\n    ksilolContainer.innerHTML = 'Ксилол';\n\n    var population = document.createElement('div');\n    population.innerHTML = '';\n\n    console.log(arrFeatures);\n    map.on('mousemove', function (e) {\n        // console.log(e)\n        title.textContent = '';\n        benzolContainer.textContent = '\\u0411\\u0435\\u043D\\u0437\\u043E\\u043B: ';\n        ksilolContainer.textContent = '\\u041A\\u0441\\u0438\\u043B\\u043E\\u043B: ';\n        population.textContent = '';\n\n        document.getElementById('info').innerHTML = JSON.stringify(e.point) + '<br />' + JSON.stringify(e.lngLat.wrap());\n\n        // console.log(e.lngLat.lng)\n        // console.log(e.lngLat.lat)\n\n        var lngFromJSON = e.lngLat.lng.toFixed(2);\n        var latFromJSON = e.lngLat.lat.toFixed(2);\n\n        arrFeatures.forEach(function (val, index) {\n            // console.log('val ',val)\n            if (val.geometry.coordinates[0].toFixed(2) === lngFromJSON && val.geometry.coordinates[1].toFixed(2) === latFromJSON) {\n\n                // console.log(arrCoordinats[index][2])\n                console.log(val.properties);\n\n                title.textContent = '' + val.properties.id;\n                benzolContainer.textContent = '\\u0411\\u0435\\u043D\\u0437\\u043E\\u043B: ' + (val.properties.benzol || 'Нет данных');\n                ksilolContainer.textContent = '\\u041A\\u0441\\u0438\\u043B\\u043E\\u043B: ' + (val.properties.ksilol || 'Нет данных');\n                population.textContent = 'Total population: ';\n\n                overlay.appendChild(title);\n                overlay.appendChild(benzolContainer);\n                overlay.appendChild(ksilolContainer);\n\n                overlay.appendChild(population);\n                overlay.style.display = 'block';\n\n                popup.setLngLat(e.lngLat).setText(arrCoordinats[index][2]).addTo(map);\n            } else {\n                popup.remove();\n            }\n        });\n    });\n}\n\nmap.on('load', function () {\n    map.setLayoutProperty('country-label', 'text-field', ['get', 'name_ru']);\n\n    // Add a geojson point source.\n    // Heatmap layers also work with a vector tile source.\n    map.addSource('earthquakes', {\n        'type': 'geojson',\n        'data': _data2.default\n    });\n\n    map.addLayer({\n        'id': 'earthquakes-heat',\n        'type': 'heatmap',\n        'source': 'earthquakes',\n        'maxzoom': 9,\n        'paint': {\n            // Increase the heatmap weight based on frequency and property magnitude\n            'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 5, 1],\n            // Increase the heatmap color weight weight by zoom level\n            // heatmap-intensity is a multiplier on top of heatmap-weight\n            'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, 9, 3],\n            // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n            // Begin color ramp at 0-stop with a 0-transparancy color\n            // to create a blur-like effect.\n            'heatmap-color': ['interpolate', ['linear'], ['heatmap-density'], 0, 'rgba(33,102,172,0)', 0.2, 'rgb(103,169,207)', 0.4, 'rgb(209,229,240)', 0.6, 'rgb(253,219,199)', 0.8, 'rgb(239,138,98)', 1, 'rgb(178,24,43)'],\n            // Adjust the heatmap radius by zoom level\n            'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, 9, 20],\n            // Transition from heatmap to circle layer by zoom level\n            'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0]\n        }\n    }, 'waterway-label');\n\n    map.addLayer({\n        'id': 'earthquakes-point',\n        'type': 'circle',\n        'source': 'earthquakes',\n        'minzoom': 7,\n        'paint': {\n            // Size circle radius by earthquake magnitude and zoom level\n            'circle-radius': ['interpolate', ['linear'], ['zoom'], 7, ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4], 16, ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]],\n            // Color circle by earthquake magnitude\n            'circle-color': ['interpolate', ['linear'], ['get', 'mag'], 1, 'rgba(33,102,172,0)', 2, 'rgb(103,169,207)', 3, 'rgb(209,229,240)', 4, 'rgb(253,219,199)', 5, 'rgb(239,138,98)', 6, 'rgb(178,24,43)'],\n            'circle-stroke-color': 'white',\n            'circle-stroke-width': 1,\n            // Transition from heatmap to circle layer by zoom level\n            'circle-opacity': ['interpolate', ['linear'], ['zoom'], 7, 0, 8, 1]\n        }\n    }, 'waterway-label');\n});\n\n// map.on('load', function () {\n//     map.addSource('airports', {\n//         'type': 'vector',\n//         'url': 'mapbox://mapbox.04w69w5j'\n//     });\n//     map.addLayer({\n//         'id': 'airport',\n//         'source': 'airports',\n//         'source-layer': 'ne_10m_airports',\n//         'type': 'symbol',\n//         'layout': {\n//             'icon-image': 'airport-15',\n//             'icon-padding': 0,\n//             'icon-allow-overlap': true\n//         }\n//     });\n\n//     map.on('moveend', function () {\n//         var features = map.queryRenderedFeatures({ layers: ['airport'] });\n\n//         if (features) {\n//             var uniqueFeatures = getUniqueFeatures(features, 'iata_code');\n//             // Populate features for the listing overlay.\n//             renderListings(uniqueFeatures);\n\n//             // Clear the input container\n//             filterEl.value = '';\n\n//             // Store the current features in sn `airports` variable to\n//             // later use for filtering on `keyup`.\n//             airports = uniqueFeatures;\n//         }\n//     });\n\n//     map.on('mousemove', 'airport', function (e) {\n//         // Change the cursor style as a UI indicator.\n//         map.getCanvas().style.cursor = 'pointer';\n\n//         // Populate the popup and set its coordinates based on the feature.\n//         var feature = e.features[0];\n//         popup\n//             .setLngLat(feature.geometry.coordinates)\n//             .setText(\n//                 feature.properties.name +\n//                 ' (' +\n//                 feature.properties.abbrev +\n//                 ')'\n//             )\n//             .addTo(map);\n//     });\n\n//     map.on('mouseleave', 'airport', function () {\n//         map.getCanvas().style.cursor = '';\n//         popup.remove();\n//     });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ecoMap/js/main.js\n");

/***/ }),

/***/ "./src/ecoMap/jsonDATA/data.json":
/*!***************************************!*\
  !*** ./src/ecoMap/jsonDATA/data.json ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__.p + \"3d8ec5754520396bd18b50cf808d198c.json\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZWNvTWFwL2pzb25EQVRBL2RhdGEuanNvbi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9lY29NYXAvanNvbkRBVEEvZGF0YS5qc29uP2QxNDciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiM2Q4ZWM1NzU0NTIwMzk2YmQxOGI1MGNmODA4ZDE5OGMuanNvblwiOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ecoMap/jsonDATA/data.json\n");

/***/ })

/******/ });